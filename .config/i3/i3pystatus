import subprocess
import re
from i3pystatus import Status

xresources = open('.Xresources', 'r').read()
maincolor =  "".join(re.findall(r'color4:\t\t(.*?)\n',xresources,re.DOTALL))
urgentcolor =  "".join(re.findall(r'color1:\t\t(.*?)\n',xresources,re.DOTALL))
okcolor =  "".join(re.findall(r'color2:\t\t(.*?)\n',xresources,re.DOTALL))
progresscolor =  "".join(re.findall(r'color12:\t\t(.*?)\n',xresources,re.DOTALL))
foregroundcolor =  "".join(re.findall(r'foreground:\t\t(.*?)\n',xresources,re.DOTALL))

status = Status(standalone=True)

beyaz="#f9f9f9"

status.register(
	"clock",
        hints = {"markup": "pango"},
	format="%H<span color='{0}'>:</span>%M".format(maincolor) ,
)

status.register(
        "clock",
        hints = {"markup": "pango"},
        format="%d<span color='{0}'>.</span>%m<span color='{0}'>.</span>%y".format(maincolor),
)

status.register(
	"battery",
        hints = {"markup": "pango"},
	format = "<span color='{0}'>bat:</span>".format(maincolor)+"{percentage:.0f}]",
	charging_color = progresscolor,
        full_color = okcolor,
	critical_color = urgentcolor,
	alert_percentage = 15,

)

status.register(
	"pulseaudio",
        hints = {"markup": "pango"},
        format = "<span color='{0}'>vol:</span>".format(maincolor)+"{volume}",
	color_muted= urgentcolor,
)

status.register(
	"backlight",
        hints = {"markup": "pango"},
	format = "<span color='{0}'>lcd:</span>".format(maincolor)+"{percentage}",
	backlight="intel_backlight",
	interval=5,
	on_rightclick="sleep 0.1 && xset -display :0.0 dpms force off",
)

status.register(
        "mem",
        hints = {"markup": "pango"},
        format = "<span color='{0}'>ram:</span>".format(maincolor)+"{used_mem:.0f}",
	color = foregroundcolor,
)

status.register(
        "cpu_usage",
        hints = {"markup": "pango"},
        format = "<span color='{0}'>cpu:</span>".format(maincolor)+"{usage}",
	interval = 5,
        color = foregroundcolor,
)

status.register(
        "temp",
        hints = {"markup": "pango"},
        format = "<span color='{0}'>temp:</span>".format(maincolor)+"{temp:.0f}",
	file = "/sys/class/thermal/thermal_zone1/temp",
	interval = 5,
	alert_color = urgentcolor,
        color = foregroundcolor,
)

status.register(
        "network",
        hints = {"markup": "pango"},
        format_up = "<span color='{0}'>".format(maincolor)+"net:</span>{bytes_sent}/{bytes_recv}",
  	interface = "wlo1",
	color_up = foregroundcolor,
	color_down = foregroundcolor, 
        format_down = "<span color='{0}'>".format(maincolor)+"net:</span><span color='{0}'>".format(urgentcolor)+"down</span>",
	dynamic_color = False,
)





status.register(
        "cmus",
        hints = {"markup": "pango"},
        format = "<span color='{0}'>".format(maincolor)+"{artist}:</span>{title}",
	format_not_running = "",
)



status.run()
